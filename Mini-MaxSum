import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {
    
    public static void miniMaxSum(List<Integer> arr) {
        long[] arrArray = new long[arr.size()];
        for (int i = 0; i < arr.size(); i++){
            arrArray[i] = arr.get(i);
        }
        
        Arrays.sort(arrArray);
        
        long minSum = arrArray[0] + arrArray[1] + arrArray[2] + arrArray[3];
        long maxSum = arrArray[1] + arrArray[2] + arrArray[3] + arrArray[4];
        
        System.out.print(minSum + " " + maxSum);
        }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
